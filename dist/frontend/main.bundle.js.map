{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/frontend/App.ts","webpack:///./src/frontend/controllers/GameController.ts","webpack:///./src/frontend/models/GameItem.ts"],"names":[],"mappings":";QAAA;QACA;QACA;QACA;QACA;;QAEA;QACA;QACA;QACA,QAAQ,oBAAoB;QAC5B;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA,iBAAiB,4BAA4B;QAC7C;QACA;QACA,kBAAkB,2BAA2B;QAC7C;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;;QAEA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;QAEA;QACA;QACA;QACA;QACA,gBAAgB,uBAAuB;QACvC;;;QAGA;QACA;QACA;QACA;;;;;;;;;;;;;;ACvJA;AAAA;AAAA;AAA8D;AACjB;AAC7C;AACA;AACA;AACA,kBAAkB,kFAAc;AAChC,YAAY,iEAAQ;AACpB,YAAY,iEAAQ;AACpB,YAAY,iEAAQ;AACpB,YAAY,iEAAQ;AACpB,YAAY,iEAAQ;AACpB,YAAY,iEAAQ;AACpB,YAAY,iEAAQ;AACpB,YAAY,iEAAQ;AACpB,YAAY,iEAAQ;AACpB,YAAY,iEAAQ;AACpB;AACA;AACA;;;;;;;;;;;;;;AClBA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAkB,SAAI,IAAI,SAAI;AAC9B;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AAC0C;AACnB;AACuC;AACvD;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,iEAAQ;AACxC;AACA;AACA;AACA,wBAAwB,uEAAc;AACtC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,0BAA0B,uEAAc;AACxC;AACA,SAAS;AACT;AACA;AACA;AACA,4DAA4D,uEAAc;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,WAAW;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,gCAAgC,uEAAc;AAC9C;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,0CAA0C,uEAAc;AACxD;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,uEAAc;AAC9C,8BAA8B,uEAAc;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,6CAAC;AACtB;AACA;AACA;AACA,IAAI,kEAAQ;AACZ;AACA;AACA,IAAI,kEAAQ;AACZ;;;;;;;;;;;;;;ACtJA;AAAA;AAAO;AACP;AACA;AACA;AACA,CAAC,wCAAwC;AAClC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"main.bundle.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"main\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/assets/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([\"./src/frontend/App.ts\",\"vendors~main\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { GameController } from \"./controllers/GameController\";\nimport { GameItem } from \"./models/GameItem\";\nconst rootElement = document.querySelector(\"#app\");\nvar gameApp = null;\nif (rootElement) {\n    gameApp = new GameController([\n        new GameItem(1, \"\", \"1.png\"),\n        new GameItem(2, \"\", \"2.png\"),\n        new GameItem(3, \"\", \"3.png\"),\n        new GameItem(4, \"\", \"4.png\"),\n        new GameItem(5, \"\", \"5.png\"),\n        new GameItem(6, \"\", \"6.png\"),\n        new GameItem(7, \"\", \"7.png\"),\n        new GameItem(8, \"\", \"8.png\"),\n        new GameItem(9, \"\", \"9.png\"),\n        new GameItem(10, \"\", \"10.png\"),\n    ], rootElement);\n    gameApp.renderGameBoard();\n}\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport autobind from \"autobind-decorator\";\nimport _ from \"lodash\";\nimport { GameItem, GameItemStatus } from \"../models/GameItem\";\nexport class GameController {\n    constructor(items, element) {\n        this.element = element;\n        this.items = [];\n        this.initGame(items);\n    }\n    initGame(initData) {\n        for (const item of initData) {\n            this.items.push(item);\n            this.items.push(new GameItem(item.id, item.divId, item.image));\n        }\n        let id = 1;\n        this.items.forEach((it) => {\n            it.status = GameItemStatus.Close;\n            it.divId = \"d\" + id;\n            id++;\n        });\n    }\n    reinitGame() {\n        this.items.forEach((item) => {\n            item.imageElement = null;\n            item.status = GameItemStatus.Close;\n            item.isMatched = false;\n        });\n        this.shuffle();\n    }\n    isWinGame() {\n        return (this.items.filter((item) => item.status === GameItemStatus.Open)\n            .length === this.items.length);\n    }\n    renderHTML(rootElement, item) {\n        // `\n        // <div class=\"col-2 gameItem m-2 p1 text-center\">\n        //                 <img src=\"\" alt=\"\" class=\"img-fluid\">\n        //             </div>\n        // `\n        const divItem = document.createElement(\"div\");\n        divItem.className = \"col-2 gameItem m-2 p1 text-center\";\n        divItem.id = item.divId;\n        divItem.addEventListener(\"click\", this.processGameItemClicked);\n        const imgItem = document.createElement(\"img\");\n        imgItem.src = `images/${item.image}`;\n        imgItem.className = \"img invisible\";\n        item.imageElement = imgItem;\n        divItem.appendChild(imgItem);\n        rootElement.appendChild(divItem);\n    }\n    renderResetButton(rootElement) {\n        let button = rootElement.querySelector(\"button#reset\");\n        if (button) {\n            button.addEventListener(\"click\", this.processResetButtonClicked);\n        }\n    }\n    renderGameBoard() {\n        this.shuffle();\n        let boardDiv = this.element.querySelector(\"#board\");\n        if (boardDiv) {\n            this.items.forEach((it) => {\n                this.renderHTML(boardDiv, it);\n            });\n        }\n        this.renderResetButton(this.element);\n    }\n    isMatched(id, imgElement) {\n        let openedItems = this.items.filter((item) => {\n            if (item.status === GameItemStatus.Open && !item.isMatched) {\n                return item;\n            }\n        });\n        if (openedItems.length == 2) {\n            let checkMatchedFilter = openedItems.filter((item) => item.id == id);\n            if (checkMatchedFilter.length < 2) {\n                openedItems.forEach((item) => {\n                    this.changeMatchedBackground(item.imageElement, false);\n                });\n                setTimeout(() => {\n                    openedItems.forEach((item) => {\n                        if (item.imageElement) {\n                            item.imageElement.className = \"img invisible\";\n                            item.status = GameItemStatus.Close;\n                            item.isMatched = false;\n                            this.changeMatchedBackground(item.imageElement);\n                        }\n                    });\n                }, 600);\n            }\n            else {\n                openedItems.forEach((item) => {\n                    item.isMatched = true;\n                    this.changeMatchedBackground(item.imageElement);\n                });\n                return true;\n            }\n        }\n        return false;\n    }\n    changeMatchedBackground(imgElement, isMatched = true) {\n        if (imgElement === null || imgElement === void 0 ? void 0 : imgElement.parentElement) {\n            if (isMatched) {\n                imgElement.parentElement.className =\n                    \"col-2 gameItem m-1 p-1 text-center\";\n            }\n            else {\n                imgElement.parentElement.className =\n                    \"col-2 gameItem m-1 p-1 text-center unmatched\";\n            }\n        }\n    }\n    processGameItemClicked(event) {\n        let element = event.target;\n        if (element.tagName === \"img\") {\n            element = element.parentElement;\n        }\n        for (const item of this.items) {\n            if (item.divId === (element === null || element === void 0 ? void 0 : element.id) &&\n                !item.isMatched &&\n                item.status === GameItemStatus.Close) {\n                item.status = GameItemStatus.Open;\n                let imgElement = element.querySelector(\"img\");\n                if (imgElement) {\n                    imgElement.className = \"img visible\";\n                    this.isMatched(item.id, imgElement);\n                }\n            }\n        }\n    }\n    processResetButtonClicked(event) {\n        this.reinitGame();\n        const boardElement = document.querySelector(\"#board\");\n        boardElement.innerHTML = \"\";\n        this.renderGameBoard();\n    }\n    shuffle() {\n        this.items = _.shuffle(this.items);\n    }\n}\n__decorate([\n    autobind\n], GameController.prototype, \"processGameItemClicked\", null);\n__decorate([\n    autobind\n], GameController.prototype, \"processResetButtonClicked\", null);\n","export var GameItemStatus;\n(function (GameItemStatus) {\n    GameItemStatus[GameItemStatus[\"Open\"] = 0] = \"Open\";\n    GameItemStatus[GameItemStatus[\"Close\"] = 1] = \"Close\";\n})(GameItemStatus || (GameItemStatus = {}));\nexport class GameItem {\n    constructor(id, divId, image, status = GameItemStatus.Close, isMatched = false, imageElement = null) {\n        this.id = id;\n        this.divId = divId;\n        this.image = image;\n        this.status = status;\n        this.isMatched = isMatched;\n        this.imageElement = imageElement;\n    }\n}\n"],"sourceRoot":""}